--- jdk11u-jdk-11.0.27-ga/src/hotspot/share/runtime/deoptimization.hpp~	Wed Apr  9 01:46:46 2025
+++ jdk11u-jdk-11.0.27-ga/src/hotspot/share/runtime/deoptimization.hpp	Wed Apr 30 14:41:37 2025
@@ -100,7 +100,7 @@
     // DataLayout::trap_bits.  This dependency is enforced indirectly
     // via asserts, to avoid excessive direct header-to-header dependencies.
     // See Deoptimization::trap_state_reason and class DataLayout.
-    Reason_RECORDED_LIMIT = Reason_profile_predicate,  // some are not recorded per bc
+    Reason_RECORDED_LIMIT = Reason_profile_predicate  // some are not recorded per bc
   };
 
   // What action must be taken by the runtime?
--- jdk11u-jdk-11.0.27-ga/make/autoconf/flags-cflags.m4~	Wed Apr 30 14:09:01 2025
+++ jdk11u-jdk-11.0.27-ga/make/autoconf/flags-cflags.m4	Wed Apr 30 15:58:55 2025
@@ -571,7 +571,7 @@
     TOOLCHAIN_CFLAGS="-errshort=tags"
 
     TOOLCHAIN_CFLAGS_JDK="-mt $TOOLCHAIN_FLAGS"
-    TOOLCHAIN_CFLAGS_JDK_CONLY="-xCC -Xa -W0,-noglobal $TOOLCHAIN_CFLAGS" # C only
+    TOOLCHAIN_CFLAGS_JDK_CONLY="-xCC -W0,-noglobal $TOOLCHAIN_CFLAGS" # C only
     TOOLCHAIN_CFLAGS_JDK_CXXONLY="-features=no%except -norunpath -xnolib" # CXX only
     TOOLCHAIN_CFLAGS_JVM="-template=no%extdef -features=no%split_init \
         -library=stlport4 -mt -features=no%except $TOOLCHAIN_FLAGS"
--- jdk11u-jdk-11.0.27-ga/./src/hotspot/os/solaris/os_solaris.cpp~	Wed Apr 30 14:09:01 2025
+++ jdk11u-jdk-11.0.27-ga/./src/hotspot/os/solaris/os_solaris.cpp	Wed Apr 30 16:14:24 2025
@@ -169,8 +169,8 @@
 
   static int lwp_cond_init(cond_t *cv, int scope, void *arg){ memset(cv, 0, sizeof(cond_t)); return 0; }
   static int lwp_cond_destroy(cond_t *cv)                   { return 0; }
-  int memcntl(void *, size_t, int, void *, int, int);
-  int meminfo(const uint64_t *, int, const uint_t *, int, uint64_t *, uint_t *);
+  //int memcntl(void *, size_t, int, void *, int, int);
+  //int meminfo(const uint64_t *, int, const uint_t *, int, uint64_t *, uint_t *);
 }
 
 // "default" initializers for pthread-based synchronization
@@ -2319,7 +2319,7 @@
 
 // Uncommit the pages in a specified region.
 void os::pd_free_memory(char* addr, size_t bytes, size_t alignment_hint) {
-  if (posix_madvise(addr, bytes, MADV_FREE) < 0) {
+  if (madvise(addr, bytes, MADV_FREE) < 0) {
     debug_only(warning("MADV_FREE failed."));
     return;
   }
@@ -2348,7 +2348,7 @@
 // Tell the OS to make the range local to the first-touching LWP
 void os::numa_make_local(char *addr, size_t bytes, int lgrp_hint) {
   assert((intptr_t)addr % os::vm_page_size() == 0, "Address should be page-aligned.");
-  if (posix_madvise(addr, bytes, MADV_ACCESS_LWP) < 0) {
+  if (madvise(addr, bytes, MADV_ACCESS_LWP) < 0) {
     debug_only(warning("MADV_ACCESS_LWP failed."));
   }
 }
@@ -2356,7 +2356,7 @@
 // Tell the OS that this range would be accessed from different LWPs.
 void os::numa_make_global(char *addr, size_t bytes) {
   assert((intptr_t)addr % os::vm_page_size() == 0, "Address should be page-aligned.");
-  if (posix_madvise(addr, bytes, MADV_ACCESS_MANY) < 0) {
+  if (madvise(addr, bytes, MADV_ACCESS_MANY) < 0) {
     debug_only(warning("MADV_ACCESS_MANY failed."));
   }
 }
--- jdk11u-jdk-11.0.27-ga/make/lib/Lib-jdk.hotspot.agent.gmk	Wed Apr 30 16:18:35 2025
+++ jdk11u-jdk-11.0.27-ga/make/lib/Lib-jdk.hotspot.agent.gmk~	Wed Apr 30 14:09:01 2025
@@ -63,7 +63,7 @@
     EXTRA_SRC := $(LIBSA_EXTRA_SRC), \
     LDFLAGS := $(LDFLAGS_JDKLIB) $(SA_LDFLAGS), \
     LIBS_linux := $(LIBDL), \
-    LIBS_solaris := -ldl -ldemangle -lthread -lproc, \
+    LIBS_solaris := -ldl -lstdc++ -lthread -lproc, \
     LIBS_macosx := -framework Foundation \
         -framework JavaRuntimeSupport -framework Security -framework CoreFoundation, \
     LIBS_windows := dbgeng.lib, \
--- jdk11u-jdk-11.0.27-ga/make/autoconf/libraries.m4~	Wed Apr 30 14:09:01 2025
+++ jdk11u-jdk-11.0.27-ga/make/autoconf/libraries.m4	Wed Apr 30 16:21:19 2025
@@ -137,7 +137,7 @@
 
   if test "x$OPENJDK_TARGET_OS" = xsolaris; then
     BASIC_JVM_LIBS="$BASIC_JVM_LIBS -lsocket -lsched -ldoor -lnsl \
-        -lrt -lkstat"
+        -lrt -lkstat -ldemangle"
     BASIC_JVM_LIBS="$BASIC_JVM_LIBS $LIBCXX_JVM"
   fi
 
--- jdk11u-jdk-11.0.27-ga/src/java.base/unix/native/libjava/java_props_md.c~	Wed Apr  9 01:46:46 2025
+++ jdk11u-jdk-11.0.27-ga/src/java.base/unix/native/libjava/java_props_md.c	Wed Apr 30 16:28:21 2025
@@ -361,10 +361,11 @@
     return 1;
 }
 
-#ifdef _AIX
+#ifdef __solaris__
+#define    tolower(C)      (((C) >= 'A' && (C) <= 'Z') ? (C) - 'A' + 'a' : (C))
 
 /*
- * AIX doesn't have strcasestr. Implement it locally in this file.
+ * Solaris 10 doesn't have strcasestr. Implement it locally in this file.
  *
  * Finds string 'needle' in 'haystack'. Returns a pointer to the
  * first occurrance of 'needle' or NULL if not found. If string
--- jdk11u-jdk-11.0.27-ga/make/lib/Awt2dLibraries.gmk~	Wed Apr 30 14:09:01 2025
+++ jdk11u-jdk-11.0.27-ga/make/lib/Awt2dLibraries.gmk	Wed Apr 30 18:25:50 2025
@@ -389,7 +389,7 @@
     HEADERS_FROM_SRC := $(LIBLCMS_HEADERS_FROM_SRC), \
     DISABLED_WARNINGS_gcc := format-nonliteral type-limits misleading-indentation stringop-truncation, \
     DISABLED_WARNINGS_clang := tautological-compare, \
-    DISABLED_WARNINGS_solstudio := E_STATEMENT_NOT_REACHED, \
+    DISABLED_WARNINGS_solstudio := E_STATEMENT_NOT_REACHED E_NEWLINE_NOT_LAST, \
     DISABLED_WARNINGS_microsoft := 4819, \
     LDFLAGS := $(LDFLAGS_JDKLIB) \
         $(call SET_SHARED_LIBRARY_ORIGIN), \
